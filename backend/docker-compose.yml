version: "3.8"

services:
  # Infrastructure Services
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "ToyStore123!"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - toystore-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ToyStore123! -Q 'SELECT 1'",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ToyStoreInventoryDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ToyStore123!
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - toystore-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - toystore-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - toystore-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ToyStore Services
  api-gateway:
    build:
      context: .
      dockerfile: src/ApiGateway/ToyStore.ApiGateway/Dockerfile
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Redis=redis:6379
      - IdentityServer__Authority=http://identity-service:80
    depends_on:
      - redis
      - identity-service
      - product-service
      - order-service
      - user-service
      - inventory-service
    networks:
      - toystore-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  identity-service:
    build:
      context: .
      dockerfile: src/Services/Identity/ToyStore.IdentityService/Dockerfile
    ports:
      - "5006:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=ToyStoreIdentityDb;User Id=sa;Password=ToyStore123!;TrustServerCertificate=true;
      - ConnectionStrings__Redis=redis:6379
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      - sqlserver
      - redis
      - rabbitmq
    networks:
      - toystore-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  product-service:
    build:
      context: .
      dockerfile: src/Services/Product/ToyStore.ProductService.API/Dockerfile
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=ToyStoreProductDb;User Id=sa;Password=ToyStore123!;TrustServerCertificate=true;
      - ConnectionStrings__Redis=redis:6379
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672/
      - IdentityServer__Authority=http://identity-service:80
    depends_on:
      - sqlserver
      - redis
      - rabbitmq
      - identity-service
    networks:
      - toystore-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  order-service:
    build:
      context: .
      dockerfile: src/Services/Order/ToyStore.OrderService/Dockerfile
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=ToyStoreOrderDb;User Id=sa;Password=ToyStore123!;TrustServerCertificate=true;
      - ConnectionStrings__Redis=redis:6379
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672/
      - IdentityServer__Authority=http://identity-service:80
    depends_on:
      - sqlserver
      - redis
      - rabbitmq
      - identity-service
    networks:
      - toystore-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  inventory-service:
    build:
      context: .
      dockerfile: src/Services/Inventory/ToyStore.InventoryService/Dockerfile
    ports:
      - "5003:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgreSQLConnection=Host=postgres;Port=5432;Database=ToyStoreInventoryDb;Username=postgres;Password=ToyStore123!;
      - ConnectionStrings__Redis=redis:6379
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672/
      - IdentityServer__Authority=http://identity-service:80
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - identity-service
    networks:
      - toystore-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  user-service:
    build:
      context: .
      dockerfile: src/Services/User/ToyStore.UserService/Dockerfile
    ports:
      - "5004:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=ToyStoreUserDb;User Id=sa;Password=ToyStore123!;TrustServerCertificate=true;
      - ConnectionStrings__Redis=redis:6379
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672/
      - IdentityServer__Authority=http://identity-service:80
    depends_on:
      - sqlserver
      - redis
      - rabbitmq
      - identity-service
    networks:
      - toystore-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  sqlserver_data:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  toystore-network:
    driver: bridge
